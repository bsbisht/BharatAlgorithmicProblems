

/*Given a string s consisting only of letters 'a' and 'b'.
 *  In a single step you can remove one palindromic subsequence from s.
Return the minimum number of steps to make the given string empty.
A string is a subsequence of a given string, if it is generated by deleting
 some characters of a given string without changing its order.
A string is called palindrome if is one that reads the same backward 
as well as forward.
We would take the approach that if the given string contains only a and b, it is a sort
of binary String so if the given string is a palindrome it would be take 1 step to 
convert it into a empty string , and if not it would always take 2 steps to convert a 
non palindromic to empty as we will first remove all the b's and the remaining String
would then be a palindrome only containing a's.
*/


class RemovePalindromicSubsequences {
    public int removePalindromeSub(String s) {
     
        char[] arr = s.toCharArray();
        if(arr.length == 0)
        {
            return 0;
        }
        else 
        {
            for(int i=0,j=arr.length - 1;i<j;)
            {
                if(arr[i++] != arr[j--])
                {
                    return 2;
                }
                
            }
            return 1;
            
        }
        
    }
}